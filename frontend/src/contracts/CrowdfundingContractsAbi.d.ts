/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  BytesLike,
  BigNumberish,
  InvokeFunction,
  BN,
} from "fuels";

import type { Enum, Option } from "./common";

export type AddressInput = { value: string };

export type AddressOutput = { value: string };

export type ContractIdInput = { value: string };

export type ContractIdOutput = { value: string };

export type ProjectInput = {
  uniqueId: BigNumberish;
  is_active: boolean;
  author: string;
  owner: IdentityInput;
  amount: BigNumberish;
  projectname: string;
};

export type ProjectOutput = {
  uniqueId: BN;
  is_active: boolean;
  author: string;
  owner: IdentityOutput;
  amount: BN;
  projectname: string;
};

export type IdentityInput = Enum<{
  Address: AddressInput;
  ContractId: ContractIdInput;
}>;

export type IdentityOutput = Enum<{
  Address: AddressOutput;
  ContractId: ContractIdOutput;
}>;

interface CrowdfundingContractsAbiInterface extends Interface {
  functions: {
    create_project: FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "create_project",
    values: [string, BigNumberish, string]
  ): Uint8Array;

  decodeFunctionData(
    functionFragment: "create_project",
    data: BytesLike
  ): DecodedValue;
}

export class CrowdfundingContractsAbi extends Contract {
  interface: CrowdfundingContractsAbiInterface;
  functions: {
    create_project: InvokeFunction<
      [projectName: string, amount: BigNumberish, author: string],
      ProjectOutput
    >;
  };
}
